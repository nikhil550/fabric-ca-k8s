---
apiVersion: v1
kind: Service
metadata:
  name: peer2
spec:
  type: NodePort
  selector:
    app: peer2
  ports:
  - protocol: TCP
    targetPort: 7050
    port: 7050
    nodePort: 30201
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: peer2
  labels:
    app: peer2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: peer2
  template:
    metadata:
      labels:
        app: peer2
    spec:
      volumes:
      - name: myvolume
        persistentVolumeClaim:
          claimName: filepvc
      - name: configfile
        secret:
          secretName: peer2-configfile
      - name: cacert
        secret:
          secretName: peer2-cacert
      - name: cert
        secret:
          secretName: peer2-cert
      - name: key
        secret:
          secretName: peer2-key
      - name: tlscacert
        secret:
          secretName: peer2-tlscacert
      - name: tlscert
        secret:
          secretName: peer2-tlscert
      - name: tlskey
        secret:
          secretName: peer2-tlskey
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock

      containers:
      - name: peer
        image: hyperledger/fabric-peer:2.2.1
        command: ["sh", "-c", "sleep 1 && peer node start"]
        env:
        - name: CORE_PEER_NETWORKID
          value: dev
        - name: CORE_PEER_ID
          value: peer
        - name: CORE_PEER_ADDRESS
          value: peer:7050
        #CORE_PEER_GOSSIP_EXTERNALENDPOINT for Hyperledger Explorer
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:7050
        - name: CORE_PEER_CHAINCODEADDRESS
          value: peer:7051
        - name: CORE_PEER_CHAINCODELISTENADDRESS
          value: 0.0.0.0:7051
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: peer:7050
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: peer:7050
        - name: CORE_PEER_GOSSIP_ENDPOINT
          value: peer:7050
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "true"
        - name: CORE_PEER_GOSSIP_USELEADERELECTION
          value: "false"
        - name: CORE_VM_ENDPOINT
          value: "tcp://docker:2375"
        - name: CORE_PEER_LOCALMSPID
          value: SymbridgePeerMSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /file/peer2.org1.example.com/msp/
        - name: CORE_PEER_FILESYSTEMPATH
          value: /file/peer2.org1.example.com/ledger/
        - name: FABRIC_LOGGING_SPEC
          value: info
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_CERT_FILE
          value: "/file/peer2.org1.example.com/tls/signcerts/cert.pem"
        - name: CORE_PEER_TLS_KEY_FILE
          value: "/file/peer2.org1.example.com/tls/keystore/key.pem"
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: "/file/peer2.org1.example.com/tls/tlscacerts/tlscacert.pem"
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: "goleveldb"
        volumeMounts:
        - mountPath: /file
          name: myvolume
        - name: configfile
          mountPath: "/file/peer2.org1.example.com/msp/"
          readOnly: true
        - name: cacert
          mountPath: "/file/peer2.org1.example.com/msp/cacerts/"
          readOnly: true
        - name: cert
          mountPath: "/file/peer2.org1.example.com/msp/signcerts/"
          readOnly: true
        - name: key
          mountPath: "/file/peer2.org1.example.com/msp/keystore/"
          readOnly: true
        - name: tlscacert
          mountPath: "/file/peer2.org1.example.com/tls/tlscacerts/"
          readOnly: true
        - name: tlscert
          mountPath: "/file/peer2.org1.example.com/tls/signcerts/"
          readOnly: true
        - name: tlskey
          mountPath: "/file/peer2.org1.example.com/tls/keystore/"
          readOnly: true
        - mountPath: /host/var/run/docker.sock
          name: dockersocket

        ports:
        - containerPort: 7050
